package net.ctrdn.stuba.dbs.netmonitor.hbm;
// Generated Apr 5, 2014 4:21:51 PM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

/**
 * NmInterface generated by hbm2java
 */
@Entity
@Table(name = "nm_interface", catalog = "stuba_netmonitor"
)
public class NmInterface implements java.io.Serializable {

    private Integer id;
    private NmProbe nmProbe;
    private int interfaceIndex;
    private String interfaceName;
    private String interfaceType;
    private Date lastUpdateDate;
    private Date createDate;
    private Set nmInterfaceStatses = new HashSet(0);

    public NmInterface() {
    }

    public NmInterface(NmProbe nmProbe, int interfaceIndex, String interfaceName, Date createDate) {
        this.nmProbe = nmProbe;
        this.interfaceIndex = interfaceIndex;
        this.interfaceName = interfaceName;
        this.createDate = createDate;
    }

    public NmInterface(NmProbe nmProbe, int interfaceIndex, String interfaceName, String interfaceType, Date lastUpdateDate, Date createDate, Set nmInterfaceStatses) {
        this.nmProbe = nmProbe;
        this.interfaceIndex = interfaceIndex;
        this.interfaceName = interfaceName;
        this.interfaceType = interfaceType;
        this.lastUpdateDate = lastUpdateDate;
        this.createDate = createDate;
        this.nmInterfaceStatses = nmInterfaceStatses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "probe_id", nullable = false)
    public NmProbe getNmProbe() {
        return this.nmProbe;
    }

    public void setNmProbe(NmProbe nmProbe) {
        this.nmProbe = nmProbe;
    }

    @Column(name = "interface_index", nullable = false)
    public int getInterfaceIndex() {
        return this.interfaceIndex;
    }

    public void setInterfaceIndex(int interfaceIndex) {
        this.interfaceIndex = interfaceIndex;
    }

    @Column(name = "interface_name", nullable = false)
    public String getInterfaceName() {
        return this.interfaceName;
    }

    public void setInterfaceName(String interfaceName) {
        this.interfaceName = interfaceName;
    }

    @Column(name = "interface_type")
    public String getInterfaceType() {
        return this.interfaceType;
    }

    public void setInterfaceType(String interfaceType) {
        this.interfaceType = interfaceType;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update_date", length = 19)
    public Date getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(Date lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "create_date", nullable = false, length = 19)
    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "nmInterface", cascade = CascadeType.ALL)
    @NotFound(action = NotFoundAction.IGNORE)
    public Set getNmInterfaceStatses() {
        return this.nmInterfaceStatses;
    }

    public void setNmInterfaceStatses(Set nmInterfaceStatses) {
        this.nmInterfaceStatses = nmInterfaceStatses;
    }

}
